const axios = require("axios");
const fs = require("fs");
const path = require("path");

module.exports.config = {
  name: "tungdongxu",
  version: "1.1.0",
  hasPermssion: 0,
  credits: "Ho√†ng L·ªôc khumbitcode>< - Mod by GPT",
  description: "Tung ƒë·ªìng xu may r·ªßi + emoji + ·∫£nh (th·∫Øng/thua ch·ªâ ƒÉn ho·∫∑c m·∫•t 1/2 ti·ªÅn c∆∞·ª£c)",
  commandCategory: "Tr√≤ Ch∆°i",
  usages: "tungdongxu <ng·ª≠a/x·∫•p> <s·ªë ti·ªÅn>",
  cooldowns: 5
};

module.exports.run = async function({ api, event, args, Currencies }) {
  const { threadID, senderID, messageID } = event;
  let money = (await Currencies.getData(senderID)).money;

  if (!args[0] || !args[1]) {
    return api.sendMessage("‚ö†Ô∏è C√∫ ph√°p: tungdongxu <ng·ª≠a/x·∫•p> <s·ªë ti·ªÅn>", threadID, messageID);
  }

  let choice = args[0].toLowerCase();
  let bet = parseInt(args[1].replace(/[^0-9]/g, "")); // ch·ªâ l·∫•y s·ªë

  if (isNaN(bet) || bet < 10000) {
    return api.sendMessage("üí∏ S·ªë ti·ªÅn ƒë·∫∑t c∆∞·ª£c ph·∫£i l√† s·ªë v√† t·ªëi thi·ªÉu 10,000 RP!", threadID, messageID);
  }
  if (bet > money) {
    return api.sendMessage("‚ùå S·ªë ti·ªÅn c·ªßa b·∫°n kh√¥ng ƒë·ªß!", threadID, messageID);
  }
  if (choice !== "ng·ª≠a" && choice !== "x·∫•p") {
    return api.sendMessage("‚ö†Ô∏è C∆∞·ª£c kh√¥ng h·ª£p l·ªá! Ch·ªçn 'ng·ª≠a' ho·∫∑c 'x·∫•p'", threadID, messageID);
  }

  // link ·∫£nh k·∫øt qu·∫£
  const images = {
    ng·ª≠a: "https://i.postimg.cc/X7NdTHcf/552252503-1474775573773932-7177428520783273056-n.png",
    x·∫•p: "https://i.postimg.cc/qRnxvNNT/553193516-1861535121385307-5200824650958779255-n.png"
  };

  // tung ƒë·ªìng xu (50/50)
  let result = Math.random() < 0.5 ? "ng·ª≠a" : "x·∫•p";
  let win = (choice === result);
  let resultEmoji = win ? "üéâ" : "üò¢";

  // s·ªë ti·ªÅn th·∫Øng ho·∫∑c thua ch·ªâ = 1/2 bet
  let delta = Math.floor(bet / 2);

  // b·∫£ng k·∫øt qu·∫£
  let messageBody =
`üé≤ K·∫æT QU·∫¢ TUNG ƒê·ªíNG XU ${resultEmoji}
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
üëâ K·∫øt qu·∫£: ${result.toUpperCase()}
üëë Ng∆∞·ªùi th·∫Øng: ${win ? "B·∫°n" : "Kh√¥ng"}
üíÄ Ng∆∞·ªùi thua: ${win ? "Kh√¥ng" : "B·∫°n"}
üí∞ Ti·ªÅn ${win ? "th·∫Øng" : "thua"}: ${win ? "+"+delta+" RP" : "-"+delta+" RP"}
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ`;

  // t·∫£i ·∫£nh v·ªÅ file t·∫°m
  const imgPath = path.join(__dirname, "cache", `coin_${senderID}.png`);
  const response = await axios.get(images[result], { responseType: "arraybuffer" });
  fs.writeFileSync(imgPath, Buffer.from(response.data));

  // g·ª≠i k·∫øt qu·∫£ + ·∫£nh
  api.sendMessage({
    body: messageBody,
    attachment: fs.createReadStream(imgPath)
  }, threadID, async () => {
    // x√≥a file t·∫°m sau khi g·ª≠i
    fs.unlinkSync(imgPath);

    // x·ª≠ l√Ω ti·ªÅn
    if (win) {
      await Currencies.increaseMoney(senderID, delta);
    } else {
      await Currencies.decreaseMoney(senderID, delta);
    }
  }, messageID);
};
